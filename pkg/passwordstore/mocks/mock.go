// Code generated by MockGen. DO NOT EDIT.
// Source: passwordstore.go

// Package mock_passwordstore is a generated GoMock package.
package mock_passwordstore

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPasswordStore is a mock of PasswordStore interface.
type MockPasswordStore struct {
	ctrl     *gomock.Controller
	recorder *MockPasswordStoreMockRecorder
}

// MockPasswordStoreMockRecorder is the mock recorder for MockPasswordStore.
type MockPasswordStoreMockRecorder struct {
	mock *MockPasswordStore
}

// NewMockPasswordStore creates a new mock instance.
func NewMockPasswordStore(ctrl *gomock.Controller) *MockPasswordStore {
	mock := &MockPasswordStore{ctrl: ctrl}
	mock.recorder = &MockPasswordStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPasswordStore) EXPECT() *MockPasswordStoreMockRecorder {
	return m.recorder
}

// Add mocks base method.
func (m *MockPasswordStore) Add(arg0 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Add", arg0)
}

// Add indicates an expected call of Add.
func (mr *MockPasswordStoreMockRecorder) Add(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockPasswordStore)(nil).Add), arg0)
}

// Exists mocks base method.
func (m *MockPasswordStore) Exists(arg0 string) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Exists", arg0)
	ret0, _ := ret[0].(bool)
	return ret0
}

// Exists indicates an expected call of Exists.
func (mr *MockPasswordStoreMockRecorder) Exists(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Exists", reflect.TypeOf((*MockPasswordStore)(nil).Exists), arg0)
}

// Get mocks base method.
func (m *MockPasswordStore) Get() []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get")
	ret0, _ := ret[0].([]string)
	return ret0
}

// Get indicates an expected call of Get.
func (mr *MockPasswordStoreMockRecorder) Get() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockPasswordStore)(nil).Get))
}
